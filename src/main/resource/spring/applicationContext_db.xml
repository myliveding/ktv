<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
       default-lazy-init="true">

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass">
			<value>${dataSource.driverClassName}</value>
		</property>
		<property name="jdbcUrl">
			<value>${dataSource.url}</value>
		</property>
		<property name="user">
			<value>${dataSource.username}</value>
		</property>
		<property name="password">
			<value>${dataSource.password}</value>
		</property>
		<property name="minPoolSize" value="${dataSource.minPoolSize}" />
		<property name="maxPoolSize" value="${dataSource.maxPoolSize}" />
		<property name="maxIdleTime" value="${dataSource.maxIdleTime}" />
		<property name="acquireIncrement" value="${dataSource.acquireIncrement}" />
		<property name="maxStatements" value="${dataSource.maxStatements}" />
		<property name="initialPoolSize" value="${dataSource.initialPoolSize}" />
		<property name="idleConnectionTestPeriod" value="${dataSource.idleConnectionTestPeriod}" />
		<property name="acquireRetryAttempts" value="${dataSource.acquireRetryAttempts}" />
		<property name="acquireRetryDelay" value="${dataSource.acquireRetryDelay}" />
		<property name="breakAfterAcquireFailure" value="${dataSource.breakAfterAcquireFailure}" />
		<property name="testConnectionOnCheckout" value="${dataSource.testConnectionOnCheckout}" />
		<property name="testConnectionOnCheckin" value="${dataSource.testConnectionOnCheckin}" />
	</bean>

    <!-- 配置Mybatis集成  sqlsessionfactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	    <property name="dataSource" ref="dataSource" />
	    <property name="typeAliasesPackage" value="com.st.ktv.entity"/>
	    <property name="mapperLocations" value="classpath:com/st/ktv/mybatis/*.xml" />
    </bean>

    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
	  <constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>


	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.st.ktv.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

    <!-- 事务管理器配置, 使用jdbc事务 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
      <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
</beans>