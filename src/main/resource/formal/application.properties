#==============================dataSource settings==============================
dataSource.driverClassName=com.mysql.jdbc.Driver
dataSource.url=jdbc:mysql://42.121.131.12:3306/sshcktv?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull
dataSource.username=sshc
dataSource.password=sshcktv@2017

#连接池设置
#最小连接数. Default: 3
dataSource.minPoolSize=3
#最大连接数. Default: 15
dataSource.maxPoolSize=50
#最大空闲时间, 30 (* 60秒) 分钟内未使用则连接被丢弃. 若为 0 则永不丢弃. Default: 0
dataSource.maxIdleTime=300
#当连接池中的连接耗尽的时候 c3p0 一次同时获取的连接数. Default: 3
dataSource.acquireIncrement=3
#最大 PreparedStatement 的数量. 如果 maxStatements 与 maxStatementsPerConnection均为 0, 则表示缓存被关闭. Default: 0
dataSource.maxStatements=0
#初始化时的连接数, 应在 minPoolSize 与 maxPoolSize 之间. Default: 3
dataSource.initialPoolSize=3
#每隔 1 (* 60秒) 分钟检查所有连接池中的空闲连接. Default: 0
dataSource.idleConnectionTestPeriod=60
#从数据库获取新连接失败后重复尝试获取的次数. Default: 30
dataSource.acquireRetryAttempts=10
#两次连接中间隔时间, 单位毫秒. Default: 1000
dataSource.acquireRetryDelay=1000
#尝试获取连接失败后该数据源将申明已断开并永久关闭. Default: false
dataSource.breakAfterAcquireFailure=false
#提交时校验连接的有效性. c3p0 官方不建议开启此值 [Use only if necessary. Expensive(仅在需要时用, 否则会很昂贵)] Default: false
dataSource.testConnectionOnCheckout=false
#获取连接时是否校验其有效性. Default: false
dataSource.testConnectionOnCheckin=false


#==============================taskExecutor==============================
#当一个任务通过execute(Runnable)方法欲添加到线程池时： 
#如果此时线程池中的数量小于corePoolSize，即使线程池中的线程都处于空闲状态，也要创建新的线程来处理被添加的任务。 
#如果此时线程池中的数量等于 corePoolSize，但是缓冲队列 workQueue未满，那么任务被放入缓冲队列。 
#如果此时线程池中的数量大于corePoolSize，缓冲队列workQueue满，并且线程池中的数量小于maximumPoolSize，建新的线程来处理被添加的任务。 
#如果此时线程池中的数量大于corePoolSize，缓冲队列workQueue满，并且线程池中的数量等于maximumPoolSize，那么通过 handler所指定的策略来处理此任务。
#也就是：处理任务的优先级为：核心线程corePoolSize、任务队列workQueue、最大线程 maximumPoolSize，如果三者都满了，使用handler处理被拒绝的任务。 
#当线程池中的线程数量大于 corePoolSize时，如果某线程空闲时间超过keepAliveTime，线程将被终止。这样，线程池可以动态的调整池中的线程数。

#线程池维护线程的最少数量
taskExecutor.corePoolSize=20
#线程池维护线程所允许的空闲时间
taskExecutor.keepAliveSeconds=200
#线程池维护线程的最大数量
taskExecutor.maxPoolSize=100
#线程池所使用的缓冲队列
taskExecutor.queueCapacity=25
